
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { String, Int, BigInt, Float, ID, Bytes, Timestamp, Boolean } from '@sentio/sdk/store'
import { Entity, Required, One, Many, Column, ListColumn, AbstractEntity } from '@sentio/sdk/store'
import { BigDecimal } from '@sentio/bigdecimal'
import { DatabaseSchema } from '@sentio/sdk'

export enum PositionSide {
  SUPPLY = "SUPPLY", BORROW = "BORROW"
}




@Entity("Account")
export class Account extends AbstractEntity  {

	@Required
	@Column("ID")
	id: ID

	@Required
	@Column("String")
	account: String

	@Required
	@Column("String")
	pool: String
  constructor(data: Partial<Account>) {super()}
}


const source = `enum PositionSide {
    SUPPLY
    BORROW
}

type Account @entity {
    "{user_address}-{pool_address}"
    id: ID!
    "{user_address}"
    account: String!
    "{pool_address}"
    pool: String!
}`
DatabaseSchema.register({
  source,
  entities: {
    "Account": Account
  }
})
